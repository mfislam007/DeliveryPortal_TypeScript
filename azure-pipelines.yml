trigger:
  branshes:
    include:
      - master
      - dev
      - test
      - feature/heroku-deployment-integration

pool:
  vmImage: "ubuntu-latest"

variables:
  - group: Deployment

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "12.x"
    displayName: "Install Node.js"

  - script: yarn install
    displayName: "yarn install"

  - script: yarn test
    displayName: "yarn test"

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testRunner: JUnit
      testResultsFiles: "./.jest/coverage/test-results.xml"

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: "$(System.DefaultWorkingDirectory)/.jest/coverage/clover.xml"
      reportDirectory: "$(System.DefaultWorkingDirectory)/.jest/coverage/lcov-report"

  - script: yarn build
    displayName: "yarn build"

  - task: Bash@3
    inputs:
      failOnStderr: true
      targetType: "inline"
      script: |
        apt-get update -qy
        apt-get install -y ruby-dev
        gem install dpl
        if [ $(Build.SourceBranch) =~ .*(heroku-deployment-integration|dev|test|master) ]; then
        dpl --provider=heroku --app=$(HEROKU_APP_NAME_DELIVERY_PORTAL_FRONTEND_REACT) --api-key=$(HEROKU_API_KEY) --skip_cleanup
        fi
